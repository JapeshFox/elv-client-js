[
  {
    "signature": "async ContentObjects({\n  \"libraryId\": \"ilib22zDKQk2uSQkgkdsAYsLYsRUFLYL\"\n});",
    "result": "[\n  {\n    \"id\": \"iq__22zDKQk2uSQkgkdsAYsLYsRUFLYL\",\n    \"versions\": [\n      {\n        \"id\": \"iq__22zDKQk2uSQkgkdsAYsLYsRUFLYL\",\n        \"hash\": \"hq__QmPx3v9KMBoNow7G8fB3mFQe5VSiNQuhPaszvE1d2YNxrW\",\n        \"type\": \"hq__QmUDYt9VYh9an1y8R4JMQUmVWfxDyhrpAiTepG4soq1BEr\",\n        \"meta\": {\n          \"image\": \"hqp_QmTp4gdjq4xi9gDn4Xe1W2JzVSybS4fYVjy4ecGeGDMpPB\",\n          \"private\": {\n            \"meta\": \"data\"\n          }\n        }\n      },\n      {\n        \"id\": \"iq__22zDKQk2uSQkgkdsAYsLYsRUFLYL\",\n        \"hash\": \"hq__Qmc31KVgbWTgpSTkMHbL3o9HAoGhE17HS4hFu4DZoFZoZH\",\n        \"type\": \"hq__QmUDYt9VYh9an1y8R4JMQUmVWfxDyhrpAiTepG4soq1BEr\",\n        \"meta\": {\n          \"private\": {\n            \"meta\": \"data\"\n          }\n        }\n      },\n      {\n        \"id\": \"iq__22zDKQk2uSQkgkdsAYsLYsRUFLYL\",\n        \"hash\": \"hq__QmXQwbGtmTnyTqdQssXqtVarpxMwbkvgFz6R5zwMJqxn9y\",\n        \"type\": \"\",\n        \"meta\": {\n          \"private\": {\n            \"meta\": \"data\"\n          }\n        }\n      }\n    ]\n  },\n  {\n    \"id\": \"iq__rntQJ8cH7KbKuG1D6D8d91vGHgm\",\n    \"versions\": [\n      {\n        \"id\": \"iq__rntQJ8cH7KbKuG1D6D8d91vGHgm\",\n        \"hash\": \"hq__Qmb6RuZWD1e8UTQYJyBT7stjnQRCnvR1qdiSYVoQyGDNzh\",\n        \"type\": \"hq__QmfGXMQUofbuAMcy9DTyGCo8jGKujj2xsdUpSr3Rp2zQwi\",\n        \"meta\": {\n          \"toMerge\": {\n            \"merge\": \"me\",\n            \"new\": \"metadata\"\n          },\n          \"toReplace\": {\n            \"new\": \"metadata\"\n          }\n        }\n      },\n      {\n        \"id\": \"iq__rntQJ8cH7KbKuG1D6D8d91vGHgm\",\n        \"hash\": \"hq__QmSMi2mfZV4RZwRYe6jhhcs5xKhQ9boqz8tY1uqW3DC3Ht\",\n        \"type\": \"hq__QmfGXMQUofbuAMcy9DTyGCo8jGKujj2xsdUpSr3Rp2zQwi\",\n        \"meta\": {\n          \"toDelete\": {\n            \"delete\": \"me\"\n          },\n          \"toMerge\": {\n            \"merge\": \"me\"\n          },\n          \"toReplace\": {\n            \"replace\": \"me\"\n          }\n        }\n      }\n    ]\n  }\n]"
  }
]